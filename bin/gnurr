#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'gnurr'
require 'optparse'

options = {
  debug: false,
  stdout: true
}

option_parser = OptionParser.new do |opts|
  opts.banner = 'Usage: gnurr [options] [--] [<path>...]'

  opts.on('-b', '--base NAME',
          'Base reference: branch, SHA, etc for diff (default: master)') do |v|
    options[:base] = v
  end

  opts.on('-e', '--expanded',
          'Show lints for all changed files, not just changed lines (false',
          'unless specified)') do
    options[:expanded] = true
  end

  opts.on('-l', '--linters LIST',
          'Linters to use (default: es,haml,ruby,scss (all))') do |v|
    options[:linters] = v.split(',').map(&:to_sym)
  end

  opts.on('-v', '--[no-]verbose', 'Run verbosely') do |v|
    options[:verbose] = v
  end

  opts.on('--version', 'Show version') do
    puts Gnurr::VERSION
    exit
  end

  opts.on('--debug', 'Debug mode') do
    options[:debug] = true
  end

  opts.on('-h', '--help', 'Prints this help') do
    puts opts
    exit
  end
end

begin
  option_parser.parse!
  if !ARGV.nil? && ARGV.any?
    options[:path] = ARGV
  end
rescue OptionParser::InvalidOption => error
  puts "Gnurr doesn't recognize that #{error}"
  exit
rescue OptionParser::AmbiguousOption => error
  puts "That's an #{error}"
  exit
end

linter = Gnurr::Processor.new(options)

linter.execute
